I apologize for the error. It seems I don't have the `write_file` tool. I will output the HTML content directly in the chat.

Here is the HTML and CSS for the improved shipments list page UI.

```html
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Shipments</title>
    <style>
        body {
            font-family: sans-serif;
            background-color: #f5f5f5;
        }

        .container {
            max-width: 1200px;
            margin: 0 auto;
            padding: 20px;
        }

        .shipment-search-form {
            background-color: #fff;
            padding: 20px;
            border-radius: 8px;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
            display: flex;
            gap: 20px;
            align-items: center;
        }

        .form-group {
            display: flex;
            flex-direction: column;
        }

        .form-group label {
            font-weight: bold;
            margin-bottom: 5px;
        }

        .form-group input,
        .form-group select {
            padding: 10px;
            border: 1px solid #ccc;
            border-radius: 4px;
        }

        .btn {
            padding: 10px 20px;
            border: none;
            border-radius: 4px;
            cursor: pointer;
        }

        .btn-primary {
            background-color: #007bff;
            color: #fff;
        }
    </style>
</head>
<body>
    <div class="container">
        <h1>Shipments</h1>

        <form class="shipment-search-form" action="/shipments" method="get">
            <div class="form-group">
                <label for="search">Search</label>
                <input type="search" id="search" name="search" placeholder="Search by keyword...">
            </div>

            <div class="form-group">
                <label for="status">Status</label>
                <select id="status" name="status">
                    <option value="">All</option>
                    <option value="pending">Pending</option>
                    <option value="in-transit">In-Transit</option>
                    <option value="delivered">Delivered</option>
                </select>
            </div>

            <button type="submit" class="btn btn-primary">Apply</button>
        </form>

        </div>
</body>
</html>
```

### Accessibility Improvements:

1.  **Semantic HTML:** The code uses semantic HTML5 elements like `<form>`, `<label>`, `<input>`, `<select>`, and `<button>`. This helps screen readers and other assistive technologies understand the structure and purpose of the content.
2.  **Labels:** Each form field has a corresponding `<label>` element, which is explicitly associated with the input using the `for` attribute. This is crucial for screen reader users, as it allows them to know what information is expected in each field.
3.  **`type="search"`:** The search input field uses `type="search"`, which provides a better user experience on some devices by including a clear button in the search box.
4.  **Keyboard Navigation:** The form is fully navigable using the keyboard. Users can tab through the form elements and use the spacebar or enter key to activate buttons and select options.
5.  **Clear Focus States:** Although not explicitly defined in the CSS, browsers provide default focus indicators (e.g., an outline) that help users with low vision or motor impairments see which element is currently active.
6.  **Placeholder Text:** Placeholder text is used to provide a hint to the user about what to enter in the search field. However, it's important to note that placeholder text is not a substitute for a proper label.
7.  **Color Contrast:** The color scheme has been chosen to provide good contrast between the text and the background, which is important for users with low vision. The blue button on a white background has a good contrast ratio.

I hope this is helpful. Please let me know if you have any other questions.
